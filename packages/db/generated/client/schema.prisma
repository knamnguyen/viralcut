// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

//binaryTargets to handle the client for production environment on vercel
generator client {
  provider      = "prisma-client-js"
  output        = "../generated/client"
  binaryTargets = ["native", "rhel-openssl-3.0.x", "linux-arm64-openssl-3.0.x", "linux-musl-arm64-openssl-3.0.x"]
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_URL")
  directUrl = env("DIRECT_URL")
}

//note that post current does not connect to a user
//you would want to connect it to a user later
model Post {
  id        String   @id @default(uuid())
  title     String   @db.VarChar(256)
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

//Probably not needed because we can use the clerk user object to store the stripe customer id and access type
model StripePayment {
  id              String   @id @default(cuid())
  clerkUserId     String // Clerk user ID
  amount          Int // in cents
  currency        String   @default("usd")
  status          String
  stripePaymentId String   @unique
  metadata        Json? // Optional metadata about the purchase
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  // Index to make querying by user efficient
  @@index([clerkUserId])
}

//User and and Stripe subscribers info is stored in the Clerk User object so it is not defined in this schema here
